---
name: github.com/opspec-pkgs/docker.build.localimage
description: |
  Builds image that stores on host machines docker image store.
  * `dockerSocket` must be the correct socket path to the host machine's `dockerd` runtime socket IE `/var/run/docker.sock` (default path). For linux, you can try `netstat -lx | grep docker | grep -Po '/.*docker.sock'` to verify the proper socket file.
  * `imageName` is the name of the image you want to give the resultant image for `docker build`
  * `dockerfile` is the path to (including) the Dockerfile from which you will build the image.

  Once a successful run of this op completes, you should see your new container created on the host machine using `docker images`.
inputs:
  dockerfile:
    file:
      description: Local Image Dockerfile
      default: .
  dockerSocket:
    socket:
      description: access to docker on node
  imageName:
    string:
      description: "Name the container image IE container_name:latest (as in what would use for `docker build -t <...>`)"
run:
  serial:
  - container:
      image: { ref: 'docker:18.09.0-dind' }
      files:
        /Dockerfile: $(dockerfile)
      sockets:
# The lval here needs to be your parent host's path to your docker daemon runtime socket.
# For linux, you can try `netstat -lx | grep docker | grep -Po '/.*docker.sock'`
        /var/run/docker.sock: dockerSocket
      envVars:
        imageName: $(imageName)
      cmd:
        - sh
        - -ce
        - |
          cat /Dockerfile | docker image build \
            -t "$imageName" -

version: 1.0.0
